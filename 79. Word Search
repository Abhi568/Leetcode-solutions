class Solution(object):
    def exist(self, board, word):
        visited=[[0]*len(board[0]) for i in range(len(board))]
        
        def isSafe(i,j):
            if i>=0 and i<len(board) and j>=0 and j<len(board[0]):
                return True
            return False
        def call(i,j,k):
            # print(i,j,k)
            if len(word)==k:
                return True
            visited[i][j]=True
            if isSafe(i+1,j) and word[k]==board[i+1][j] and  visited[i+1][j]==False:
                if call(i+1,j,k+1)==True:
                    return True
            if isSafe(i-1,j) and word[k]==board[i-1][j] and visited[i-1][j]==False:
                if call(i-1,j,k+1)==True:
                    return True
            if isSafe(i,j-1) and word[k]==board[i][j-1] and visited[i][j-1]==False:
                if call(i,j-1,k+1)==True:
                    return True
            if isSafe(i,j+1) and word[k]==board[i][j+1] and visited[i][j+1]==False:
                if call(i,j+1,k+1)==True:
                    return True
            visited[i][j]=False
            return False

        
        for i in range(len(board)):
            for j in range(len(board[0])):
                k=0
                if board[i][j]==word[k]:
                    # print(i,j)
                    if call(i,j,k+1)==True:
                        return True
        return False
