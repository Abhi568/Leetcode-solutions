# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def insertionSortList(self, head: Optional[ListNode]) -> Optional[ListNode]:
        if head==None or (head.next==None and head!=None):
            return head
        pre=head
        curr=head.next
        while(curr!=None):
            while(pre!=curr):
                if pre.val>curr.val:
                    pre.val,curr.val=curr.val,pre.val
                pre=pre.next
                pre=head
            curr=curr.next
        return head
        

#       |             |
# #     6 5 3 1 8 7 2 4
# -->   5 6 3 1 8 7 2 4
# -->   3 6 5 1 8 7 2 4
#       3 5 6 1 8 7 2 4
# -->   1 5 6 3 8 7 2 4
#       1 3 6 5 8 7 2 4
#       1 3 5 6 8 7 2 4
# -->   1 3 5 6 7 8 2 4 
# -->   1 2 3 4 5 6 7 8
       
    
    
    
#     
