class Solution(object):
    def solve(self, board):
        visited=[[False]*(len(board[0])) for i in range(len(board))]
        # self.found=True
        def issafe(i,j):
            if i>=0 and i<len(board) and j>=0 and j<len(board[0]) and visited[i][j]==False and board[i][j]=='O':
                return True
            return False
        def call(i,j):
            # print(i,j)
            visited[i][j]=True
            if issafe(i+1,j):
                call(i+1,j)
            if issafe(i-1,j):
                call(i-1,j)
            if issafe(i,j+1):
                call(i,j+1)
            if issafe(i,j-1):
                call(i,j-1)
        
        
        # print(visited)
        
        for j in range(len(board[0])):
            if board[0][j]=='O'and visited[0][j]==False:
                call(0,j)
        i=len(board)-1
        for j in range(len(board[0])):
            if board[i][j]=='O' and visited[i][j]==False:
                call(i,j)
        i=0
        for i in range(len(board)):
            if board[i][0]=='O' and visited[i][0]==False:
                call(i,0)
        j=len(board[0])-1
        for i in range(len(board)):
            if board[i][j]=='O' and visited[i][j]==False:
                call(i,j)
        # print(visited)
        for i in range(len(visited)):
            for j in range(len(visited[0])):
                if visited[i][j]==False and board[i][j]=='O':
                    board[i][j]='X'
        return board
                
       
