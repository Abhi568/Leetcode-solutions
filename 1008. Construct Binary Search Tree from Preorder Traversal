# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
# in-LNR
# pre-NLR
# post-LRN
class Solution(object):
    def bstFromPreorder(self, preorder):
        def pre(start,end):
            
            if end<start:return None

            node=TreeNode(preorder[start])
            if start==end:
                return node
            index=start+1
            while(index<=end):
                if preorder[start]<preorder[index]:
                    break
                index+=1
            node.left=pre(start+1,index-1)
            node.right=pre(index,end)
            return node
            
            
            
            
        return pre(0,len(preorder)-1)
            
            
            
