class Solution(object):
    def orderOfLargestPlusSign(self, n, mines):
        
        grid = [[1 for j in range(n)] for i in range(n)]
        for r,c in mines: grid[r][c] = 0
            
        left = [[0 for j in range(n)] for i in range(n)]
        for i in range(n):
            count = 0
            for j in range(n):
                if grid[i][j] == 1:
                    count += 1
                else: 
                    count = 0
                left[i][j] = count
                
                    
        right = [[0 for j in range(n)] for i in range(n)]
        for i in range(n):
            count = 0
            for j in range(n-1,-1,-1):
                if grid[i][j] == 1:
                    count += 1
                else: 
                    count = 0
                right[i][j] = count
                
                    
        
        up = [[0 for j in range(n)] for i in range(n)]
        for j in range(n):
            count = 0
            for i in range(n):
                if grid[i][j] == 1:
                    count += 1
                else: 
                    count = 0
                up[i][j] = count
                
                    
        down = [[0 for j in range(n)] for i in range(n)]
        for j in range(n):
            count = 0
            for i in range(n-1,-1,-1):
                if grid[i][j] == 1:
                    count += 1
                else: 
                    count = 0
                down[i][j] = count
                
           
        max_plus = 0
        for i in range(n):
            for j in range(n):
                if grid[i][j] == 1:
                    curr_plus = min(left[i][j],right[i][j],up[i][j],down[i][j])
                    max_plus = max(max_plus, curr_plus)
        
        return max_plus
