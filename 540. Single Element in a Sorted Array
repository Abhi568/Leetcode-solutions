class Solution(object):
    def singleNonDuplicate(self, nums):
        left=0
        right=len(nums)-1
        mid=0
        while(left<=right):
            
            mid=(left+right)//2
            if mid-1>=0 and nums[mid]!=nums[mid-1] and mid+1<=len(nums)-1 and nums[mid]!=nums[mid+1]:
                return nums[mid]
            elif  mid+1<=len(nums)-1 and mid%2==0 and nums[mid]==nums[mid+1] :
                left=mid+1
            elif mid-1>=0 and mid%2==0 and nums[mid]==nums[mid-1] :
                right=mid-1
                    
            elif mid-1>=0 and mid%2!=0 and nums[mid-1]==nums[mid]:
                left=mid+1
                    
            elif mid+1<=len(nums)-1 and mid%2!=0 and nums[mid+1]==nums[mid]:
                right=mid-1
            else:
                return nums[mid]
            
        return nums[mid]
