# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next

TC = O(N)
SC = O(1)

class Solution:
    def oddEvenList(self, head: Optional[ListNode]) -> Optional[ListNode]:
        
        if head == None or head.next == None:
            return head

        head1,prev1,head2,prev2 = head,head,head.next,head.next

        while(head2!=None and head2.next!=None):
            head1.next=head2.next
            head1=head2.next

            head2.next=head1.next
            head2=head1.next
        
        if head2!=None:
            head1.next =None

        head1.next = prev2
        return prev1
            
